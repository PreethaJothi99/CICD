pipeline {
  agent any
  options { timestamps(); disableConcurrentBuilds() }
  triggers { githubPush() }   // GitHub webhook triggers this pipeline

  environment {
    GIT_REPO     = 'https://github.com/PreethaJothi99/CICD.git'
    SONAR_HOST   = 'http://98.83.151.73:9000'
    DOCKER_IMAGE = 'preethavanjothi21/cicd-webapp'
    PROJECT_KEY  = 'preetha-cicd'
  }

  stages {

    stage('Checkout') {
      steps {
        echo "Cloning ${GIT_REPO}"
        git branch: 'main', url: "${GIT_REPO}"
        sh 'ls -la'
      }
    }

    stage('Build & Unit Test') {
      steps {
        sh 'mvn -B clean verify -DskipTests=false'
      }
      post {
        always {
          junit testResults: '**/target/surefire-reports/*.xml, **/target/failsafe-reports/*.xml', allowEmptyResults: true
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true, onlyIfSuccessful: false
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonartoken', variable: 'SONAR_TOKEN')]) {
          sh """
            mvn -B sonar:sonar \
              -Dsonar.host.url=${SONAR_HOST} \
              -Dsonar.token=${SONAR_TOKEN} \
              -Dsonar.projectKey=${PROJECT_KEY} \
              -Dsonar.projectName=${PROJECT_KEY} \
              -Dsonar.java.binaries=**/target/classes
          """
        }
      }
    }

    stage('Quality Gate') {
      steps {
        withCredentials([string(credentialsId: 'sonartoken', variable: 'SONAR_TOKEN')]) {
          sh """
            set -e
            echo "Waiting for SonarQube Quality Gate..."
            for i in \$(seq 1 30); do
              STATUS=\$(curl -s -u \${SONAR_TOKEN}: \${SONAR_HOST}/api/qualitygates/project_status?projectKey='${PROJECT_KEY}' \
                | sed -n 's/.*"status":"\\([^"]*\\)".*/\\1/p')
              echo "Current gate status: \${STATUS}"
              if [ "\${STATUS}" = "OK" ]; then exit 0; fi
              if [ "\${STATUS}" = "ERROR" ]; then echo "Quality Gate FAILED"; exit 1; fi
              sleep 5
            done
            echo "Timed out waiting for Quality Gate"; exit 1
          """
        }
      }
    }

    s
